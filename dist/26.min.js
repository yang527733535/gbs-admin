(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[26],{

/***/ "./node_modules/@arco-design/web-react/es/Tree/animation.js":
/*!******************************************************************!*\
  !*** ./node_modules/@arco-design/web-react/es/Tree/animation.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_transition_group__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-transition-group */ "./node_modules/react-transition-group/esm/index.js");
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./context */ "./node_modules/@arco-design/web-react/es/Tree/context.js");
/* harmony import */ var _class_VirtualList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_class/VirtualList */ "./node_modules/@arco-design/web-react/es/_class/VirtualList/index.js");
/* harmony import */ var _ConfigProvider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ConfigProvider */ "./node_modules/@arco-design/web-react/es/ConfigProvider/index.js");
/* harmony import */ var _node__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node */ "./node_modules/@arco-design/web-react/es/Tree/node.js");
/* harmony import */ var _util_is__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../_util/is */ "./node_modules/@arco-design/web-react/es/_util/is.js");
/**
 * 该组件用来切换tree 展开收起时的动画
 */
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};







function getKey(option) {
    return option.key || option._key;
}
var TreeAnimation = function (props) {
    var _a;
    var treeContext = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context__WEBPACK_IMPORTED_MODULE_2__["TreeContext"]);
    var getPrefixCls = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_ConfigProvider__WEBPACK_IMPORTED_MODULE_4__["ConfigContext"]).getPrefixCls;
    var prefixCls = getPrefixCls('tree-node');
    var _b = treeContext.getTreeState(), expandedKeys = _b.expandedKeys, currentExpandKeys = _b.currentExpandKeys;
    var expanded = props.expanded;
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () {
        return function () {
            treeContext.onExpandEnd && treeContext.onExpandEnd(props._key);
        };
    }, []);
    var childrenPropsList = Object(react__WEBPACK_IMPORTED_MODULE_0__["useMemo"])(function () {
        var result = [];
        var loop = function (list) {
            list.forEach(function (item) {
                var data = treeContext.getFieldInfo(item);
                result.push(data);
                if (data.children && data.children.length) {
                    loop(data.children);
                }
            });
        };
        loop(props.childrenData || []);
        return result;
    }, [props.childrenData]);
    var filtedData = Object(react__WEBPACK_IMPORTED_MODULE_0__["useMemo"])(function () {
        var result = [];
        if (childrenPropsList.length) {
            var expandedKeysSet_1 = new Set(expandedKeys || []);
            childrenPropsList.forEach(function (data) {
                var _a;
                var isShow;
                var itemProps = __assign({}, treeContext.key2nodeProps[data.key]);
                if (expanded) {
                    // 只有在每一个父节点都是展开状态时，自己才会展示出来
                    isShow =
                        itemProps.parentKey === props._key ||
                            ((_a = itemProps.pathParentKeys) === null || _a === void 0 ? void 0 : _a.every(function (key) {
                                return expandedKeysSet_1.has(key);
                            }));
                }
                else if (itemProps.pathParentKeys) {
                    // 收起时，只有在props._key 对应的位置之后的所有的自己的父节点都是展开状态，才会展示自己
                    var index = itemProps.pathParentKeys.indexOf(props._key);
                    isShow = itemProps.pathParentKeys.slice(index + 1).every(function (key) {
                        return expandedKeysSet_1.has(key);
                    });
                }
                if (isShow) {
                    result.push(__assign(__assign(__assign({}, itemProps), treeContext.getNodeProps(itemProps, expandedKeysSet_1)), { key: data.key }));
                }
            });
        }
        return result;
    }, [childrenPropsList, props._key, expanded]);
    var realHeight = (_a = treeContext.virtualListProps) === null || _a === void 0 ? void 0 : _a.height;
    realHeight = Object(_util_is__WEBPACK_IMPORTED_MODULE_6__["isNumber"])(realHeight) ? realHeight : 0;
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () {
        // node set loadingMore but has no child nodes.
        // Animation will not be triggered and needs to be removed manually
        if (currentExpandKeys.indexOf(props._key) > -1 && filtedData.length === 0) {
            treeContext.onExpandEnd(props._key);
        }
    }, [filtedData, currentExpandKeys]);
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_transition_group__WEBPACK_IMPORTED_MODULE_1__["CSSTransition"], { in: currentExpandKeys.indexOf(props._key) > -1 && filtedData.length > 0, unmountOnExit: true, classNames: "tree-slide-expand", timeout: {
            enter: 200,
            exit: 0,
        }, onEnter: function (e) {
            var scrollHeight = e.scrollHeight;
            e.style.height = expanded ? 0 : Math.min(realHeight || scrollHeight, e.scrollHeight) + "px";
        }, onEntering: function (e) {
            var scrollHeight = e.scrollHeight;
            e.style.height = expanded ? Math.min(realHeight || scrollHeight, scrollHeight) + "px" : 0;
        }, onEntered: function (e) {
            e.style.height = props.expanded ? '' : 0;
            treeContext.onExpandEnd(props._key);
        }, onExit: function (e) {
            e.style.display = 'none';
        } },
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_class_VirtualList__WEBPACK_IMPORTED_MODULE_3__["default"], __assign({ itemKey: getKey, className: prefixCls + "-list", isStaticItemHeight: false }, treeContext.virtualListProps, { data: filtedData, style: { overflow: 'hidden' } }), function (child) {
            return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_node__WEBPACK_IMPORTED_MODULE_5__["default"], __assign({}, child));
        })));
};
/* harmony default export */ __webpack_exports__["default"] = (TreeAnimation);


/***/ }),

/***/ "./node_modules/@arco-design/web-react/es/Tree/context.js":
/*!****************************************************************!*\
  !*** ./node_modules/@arco-design/web-react/es/Tree/context.js ***!
  \****************************************************************/
/*! exports provided: TreeContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TreeContext", function() { return TreeContext; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

var TreeContext = Object(react__WEBPACK_IMPORTED_MODULE_0__["createContext"])({});


/***/ }),

/***/ "./node_modules/@arco-design/web-react/es/Tree/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@arco-design/web-react/es/Tree/index.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_isEqualWith__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isEqualWith */ "./node_modules/lodash/isEqualWith.js");
/* harmony import */ var lodash_isEqualWith__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqualWith__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _util_classNames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_util/classNames */ "./node_modules/@arco-design/web-react/es/_util/classNames.js");
/* harmony import */ var _node__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node */ "./node_modules/@arco-design/web-react/es/Tree/node.js");
/* harmony import */ var _node_list__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node-list */ "./node_modules/@arco-design/web-react/es/Tree/node-list.js");
/* harmony import */ var _util_is__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../_util/is */ "./node_modules/@arco-design/web-react/es/_util/is.js");
/* harmony import */ var _ConfigProvider__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ConfigProvider */ "./node_modules/@arco-design/web-react/es/ConfigProvider/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./util */ "./node_modules/@arco-design/web-react/es/Tree/util.js");
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./context */ "./node_modules/@arco-design/web-react/es/Tree/context.js");
/* harmony import */ var _util_mergeProps__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../_util/mergeProps */ "./node_modules/@arco-design/web-react/es/_util/mergeProps.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};










var DefaultFieldNames = {
    key: 'key',
    title: 'title',
    children: 'children',
    selectable: 'selectable',
    disabled: 'disabled',
    disableCheckbox: 'disableCheckbox',
    checkable: 'checkable',
    isLeaf: 'isLeaf',
};
var defaultProps = {
    selectable: true,
    autoExpandParent: true,
    checkedStrategy: 'all',
    allowDrop: function () { return true; },
    fieldNames: DefaultFieldNames,
};
var needMergeKeys = [
    'style',
    'className',
    'height',
    'size',
    'blockNode',
    'autoExpandParent',
    'checkedStrategy',
    'fieldNames',
    'icons',
    'virtualListProps',
    'showLine',
    'selectable',
    'allowDrop',
];
var Tree = /** @class */ (function (_super) {
    __extends(Tree, _super);
    function Tree(props, context) {
        var _this = _super.call(this, props, context) || this;
        // 依旧使用NodeInstance 是为了兼容1.x的一些用法，改动较大
        _this.cacheNodes = {};
        _this.key2nodeProps = {};
        _this.getMergedProps = function (baseProps) {
            var componentConfig = _this.context.componentConfig;
            var props = Object(_util_mergeProps__WEBPACK_IMPORTED_MODULE_9__["default"])(baseProps || _this.props, defaultProps, componentConfig === null || componentConfig === void 0 ? void 0 : componentConfig.Tree);
            return Object.keys(props).reduce(function (total, key) {
                if (needMergeKeys.indexOf(key) > -1) {
                    total[key] = props[key];
                }
                return total;
            }, {});
        };
        // index: 第几个dom元素, 如果传入的是字符串，会作为 node 的 key去查找。
        // nodeProps 参数似乎咩有什么用。。。但是不知道外部有没有调用，就当key用吧。。
        _this.scrollIntoView = function (_index, nodeProps) {
            var index = _index;
            if (typeof _index === 'string' || nodeProps) {
                // 作为key
                index = _index || nodeProps._key;
            }
            if (_this.nodeListRef) {
                _this.nodeListRef.scrollIntoView(index, nodeProps || _this.key2nodeProps[index]);
            }
        };
        _this.getTreeData = function () {
            return 'treeData' in _this.props
                ? _this.props.treeData
                : Object(_util__WEBPACK_IMPORTED_MODULE_7__["getTreeDataFromTreeChildren"])(_this.props.children);
        };
        // 以下外部传入的属性改变时，需要更新nodeList
        _this.needUpdateTreeData = function (prevProps, props) {
            var keys = [
                'fieldNames',
                'selectable',
                'draggable',
                'checkStrictly',
                'showLine',
                'blockNode',
                'checkable',
                'treeData',
                'children',
            ];
            return (prevProps.treeData !== props.treeData ||
                prevProps.children !== props.children ||
                keys.some(function (key) { return lodash_isEqualWith__WEBPACK_IMPORTED_MODULE_1___default()(prevProps[key], props[key]); }));
        };
        // 根据 fieldNames 获取节点数据
        _this.getFieldInfo = function (data) {
            var mergedProps = _this.getMergedProps();
            var selectable = mergedProps.selectable;
            // fieldsNames 仅在treeData时生效。
            var fieldNames = __assign(__assign({}, DefaultFieldNames), ('treeData' in _this.props ? mergedProps.fieldNames : {}));
            var result = {
                children: data[fieldNames.children],
                selectable: fieldNames.selectable in data ? data[fieldNames.selectable] : selectable,
                checkable: fieldNames.checkable in data ? data[fieldNames.checkable] : _this.props.checkable,
                title: data[fieldNames.title],
                disabled: data[fieldNames.disabled],
                disableCheckbox: data[fieldNames.disableCheckbox],
                isLeaf: data[fieldNames.isLeaf],
                key: data[fieldNames.key],
            };
            if (!(fieldNames.key in data)) {
                delete result.key;
            }
            return result;
        };
        _this.getNodeList = function (treedata, prefix) {
            _this.key2nodeProps = {};
            var prefixCls = prefix || _this.context.getPrefixCls('tree');
            var nodeList = [];
            var currentIndex = 0;
            var _a = _this.getMergedProps(), showLine = _a.showLine, blockNode = _a.blockNode;
            var loop = function (treeData, father) {
                var totalLength = treeData.length;
                return treeData.map(function (data, index) {
                    var _a = _this.getFieldInfo(data), children = _a.children, selectable = _a.selectable, checkable = _a.checkable, _b = _a.key, key = _b === void 0 ? ((father === null || father === void 0 ? void 0 : father._key) || '') + "-" + index : _b, rest = __rest(_a, ["children", "selectable", "checkable", "key"]);
                    var nodeProps = __assign(__assign(__assign({ 
                        // data 中含有dataRef时，优先级较高
                        dataRef: data, draggable: _this.props.draggable, selectable: selectable, checkable: checkable, showLine: showLine, blockNode: blockNode }, data), rest), { key: key, children: children, _key: key, _index: currentIndex++, parentKey: father ? father._key : undefined, pathParentKeys: (father && father.pathParentKeys) || [], _level: father._level || 0, 
                        // 保存node在sowLine模式下是否显示缩进线。如果父节点是其所在层级的最后一个节点，那么所有的子节点（包括孙子节点等）在父节点所在层级的缩进格都不显示缩进线。
                        _lineless: father && father._lineless ? __spreadArray(__spreadArray([], __read((father._lineless || [])), false), [father._isTail], false) : [] });
                    if (totalLength === index + 1) {
                        nodeProps.className = Object(_util_classNames__WEBPACK_IMPORTED_MODULE_2__["default"])(prefixCls + "-node-is-tail", nodeProps.className);
                    }
                    nodeList.push(nodeProps);
                    _this.key2nodeProps[key] = nodeProps;
                    if (children && children.length) {
                        _this.key2nodeProps[key].children = loop(children, {
                            _key: key,
                            _level: nodeProps._level + 1,
                            _lineless: nodeProps._lineless,
                            _isTail: totalLength === index + 1,
                            pathParentKeys: __spreadArray(__spreadArray([], __read(((father === null || father === void 0 ? void 0 : father.pathParentKeys) || [])), false), [key], false),
                        });
                    }
                    return nodeProps;
                });
            };
            loop(treedata || [], {});
            return nodeList;
        };
        _this.getInitExpandedKeys = function (keys) {
            if (!_this.getMergedProps().autoExpandParent) {
                return keys || [];
            }
            if (!keys) {
                return Object.keys(_this.key2nodeProps).filter(function (key) {
                    var props = _this.key2nodeProps[key];
                    return props.children && props.children.length;
                });
            }
            var expandedKeys = {};
            keys.forEach(function (key) {
                var item = _this.key2nodeProps[key];
                if (!item) {
                    return;
                }
                expandedKeys[key] = 1;
                if (item.pathParentKeys) {
                    item.pathParentKeys.forEach(function (x) {
                        expandedKeys[x] = 1;
                    });
                }
            });
            return Object.keys(expandedKeys);
        };
        _this.getInitCheckedKeys = function (keys) {
            if (!_this.props.checkStrictly) {
                var _a = Object(_util__WEBPACK_IMPORTED_MODULE_7__["getCheckedKeysByInitKeys"])(keys, _this.key2nodeProps), checkedKeys = _a.checkedKeys, indeterminateKeys = _a.indeterminateKeys;
                return {
                    checkedKeys: checkedKeys,
                    halfCheckedKeys: indeterminateKeys,
                };
            }
            return {
                checkedKeys: keys,
                halfCheckedKeys: _this.props.halfCheckedKeys || [],
            };
        };
        _this.handleSelect = function (key, e) {
            var onSelect = _this.props.onSelect;
            var extra = { e: e, node: _this.cacheNodes[key] };
            if (_this.props.multiple) {
                var selectedKeys = __spreadArray([], __read(_this.state.selectedKeys), false);
                var index = selectedKeys.indexOf(key);
                if (index > -1) {
                    selectedKeys.splice(index, 1);
                    extra.selected = false;
                }
                else {
                    extra.selected = true;
                    selectedKeys.push(key);
                }
                extra.selectedNodes = selectedKeys.map(function (x) { return _this.cacheNodes[x]; });
                if (!('selectedKeys' in _this.props)) {
                    _this.setState({ selectedKeys: selectedKeys });
                }
                onSelect && onSelect(selectedKeys, extra);
            }
            else {
                extra.selected = true;
                extra.selectedNodes = [_this.cacheNodes[key]];
                if (!('selectedKeys' in _this.props)) {
                    _this.setState({ selectedKeys: [key] });
                }
                onSelect && onSelect([key], extra);
            }
        };
        _this.handleCheck = function (checked, key, e) {
            var checkedStrategy = _this.getMergedProps().checkedStrategy;
            var _a = _this.props, onCheck = _a.onCheck, checkStrictly = _a.checkStrictly;
            var extra = { e: e, node: _this.cacheNodes[key] };
            var checkedKeys = _this.state.checkedKeys;
            var halfCheckedKeys = _this.state.halfCheckedKeys;
            if (checkStrictly) {
                if (checked) {
                    checkedKeys = checkedKeys.concat(key);
                }
                else {
                    checkedKeys = checkedKeys.filter(function (item) { return item !== key; });
                }
                var newState = {};
                if (!('checkedKeys' in _this.props)) {
                    newState.checkedKeys = checkedKeys;
                }
                if (!('halfCheckedKeys' in _this.props)) {
                    newState.halfCheckedKeys = halfCheckedKeys;
                }
                if (!Object(_util_is__WEBPACK_IMPORTED_MODULE_5__["isEmptyObject"])(newState)) {
                    _this.setState(__assign({}, newState));
                }
            }
            else {
                // 找到所有允许勾选的子节点
                var _b = Object(_util__WEBPACK_IMPORTED_MODULE_7__["getAllCheckedKeysByCheck"])(key, checked, checkedKeys, _this.key2nodeProps, halfCheckedKeys), newCheckedKeys = _b.checkedKeys, indeterminateKeys = _b.indeterminateKeys;
                checkedKeys = newCheckedKeys;
                halfCheckedKeys = indeterminateKeys;
                if (!('checkedKeys' in _this.props)) {
                    _this.setState({ checkedKeys: checkedKeys, halfCheckedKeys: halfCheckedKeys });
                }
                else {
                    _this.setState({ halfCheckedKeys: halfCheckedKeys });
                }
                if (checkedStrategy === Tree.SHOW_PARENT) {
                    checkedKeys = checkedKeys.filter(function (x) {
                        var item = _this.key2nodeProps[x];
                        if (!item || checkedKeys.indexOf(item.parentKey) === -1) {
                            return true;
                        }
                    });
                }
                else if (checkedStrategy === Tree.SHOW_CHILD) {
                    checkedKeys = checkedKeys.filter(function (x) {
                        var item = _this.key2nodeProps[x];
                        if (!item || !item.children || !item.children.length) {
                            return true;
                        }
                    });
                }
            }
            onCheck &&
                onCheck(checkedKeys, __assign({ checkedNodes: checkedKeys.map(function (x) { return _this.cacheNodes[x]; }).filter(function (x) { return x; }), checked: checked, halfCheckedKeys: halfCheckedKeys, halfCheckedNodes: halfCheckedKeys.map(function (x) { return _this.cacheNodes[x]; }).filter(function (x) { return x; }) }, extra));
        };
        _this.handleLoadMore = function (node) {
            var loadMore = _this.props.loadMore;
            if (Object(_util_is__WEBPACK_IMPORTED_MODULE_5__["isFunction"])(loadMore)) {
                var _a = _this.state, _b = _a.loadingKeys, loadingKeys = _b === void 0 ? [] : _b, loadedKeys = _a.loadedKeys;
                _this.setState({
                    loadingKeys: Array.from(new Set(__spreadArray(__spreadArray([], __read(loadingKeys), false), [node._key], false))),
                    loadedKeys: loadedKeys.filter(function (x) { return x !== node._key; }),
                }, function () { return __awaiter(_this, void 0, void 0, function () {
                    var e_1;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, loadMore(this.cacheNodes[node._key])];
                            case 1:
                                _a.sent();
                                this.setState({
                                    loadedKeys: Array.from(new Set(__spreadArray(__spreadArray([], __read(this.state.loadedKeys), false), [node._key], false))),
                                    loadingKeys: this.state.loadingKeys.filter(function (x) { return x !== node._key; }),
                                });
                                this.handleExpand(!node.expanded, node._key);
                                return [3 /*break*/, 3];
                            case 2:
                                e_1 = _a.sent();
                                console.error('[tree]load data error: ', e_1);
                                this.setState({
                                    loadingKeys: this.state.loadingKeys.filter(function (x) { return x !== node._key; }),
                                });
                                return [3 /*break*/, 3];
                            case 3: return [2 /*return*/];
                        }
                    });
                }); });
            }
        };
        _this.handleNodeDragStart = function (e, node) {
            _this.dragNode = _this.cacheNodes[node._key];
            _this.dropPosition = 0;
            var onDragStart = _this.props.onDragStart;
            onDragStart && onDragStart(e, _this.cacheNodes[node._key]);
        };
        _this.handleNodeDragEnd = function (e, node) {
            _this.dragNode = null;
            _this.dropPosition = 0;
            var onDragEnd = _this.props.onDragEnd;
            onDragEnd && onDragEnd(e, _this.cacheNodes[node._key]);
        };
        _this.handleNodeDragOver = function (e, node, dropPosition) {
            _this.dropPosition = dropPosition;
            var onDragOver = _this.props.onDragOver;
            onDragOver && onDragOver(e, _this.cacheNodes[node._key]);
        };
        _this.handleNodeDragLeave = function (e, node) {
            // this.dropNode = null;
            _this.dropPosition = 0;
            var onDragLeave = _this.props.onDragLeave;
            onDragLeave && onDragLeave(e, _this.cacheNodes[node._key]);
        };
        _this.isChildOfNode = function (node, target) {
            var current = _this.key2nodeProps[node.parentKey];
            while (current) {
                var _key = current._key, parentKey = current.parentKey;
                if (_key === target.props._key) {
                    return true;
                }
                if (parentKey === _key)
                    return;
                current = _this.key2nodeProps[parentKey];
            }
        };
        _this.isSameNode = function (node1, node2) {
            // 对比 node
            if (node1 === undefined || node2 === undefined)
                return false;
            if (node1 === node2)
                return true;
            // 对比 node.key
            var key1 = node1.key;
            var key2 = node2.key;
            if (key1 !== undefined || key2 !== undefined)
                return key1 === key2;
            // 对比 node.props._key
            var _key1 = node1.props._key;
            var _key2 = node2.props._key;
            if (_key1 === undefined && _key2 === undefined)
                return false;
            return _key1 === _key2;
        };
        _this.handleNodeDrop = function (e, node, dropPosition) {
            if (_this.dragNode) {
                var allowDrop = _this.getMergedProps().allowDrop;
                var onDrop = _this.props.onDrop;
                var nodeInstance = _this.cacheNodes[node._key];
                if (onDrop &&
                    !_this.isChildOfNode(node, _this.dragNode) &&
                    !_this.isSameNode(_this.dragNode, nodeInstance)) {
                    if (allowDrop && !allowDrop({ dropNode: nodeInstance, dropPosition: dropPosition })) {
                        return;
                    }
                    onDrop({
                        dragNode: _this.dragNode,
                        dropNode: nodeInstance,
                        dropPosition: dropPosition,
                        e: e,
                    });
                }
            }
        };
        _this.handleAllowDrop = function (node, dropPosition) {
            var allowDrop = _this.getMergedProps().allowDrop;
            var isAllowDrop = true;
            if (typeof allowDrop === 'function') {
                isAllowDrop = allowDrop({ dropNode: _this.cacheNodes[node._key], dropPosition: dropPosition });
            }
            return isAllowDrop;
        };
        _this.handleExpand = function (expanded, key) {
            var _a = _this.state, currentExpandKeys = _a.currentExpandKeys, _b = _a.expandedKeys, expandedKeys = _b === void 0 ? [] : _b;
            var onExpand = _this.props.onExpand;
            if (currentExpandKeys.indexOf(key) > -1) {
                // 如果当前key节点正在展开/收起，不执行操作。
                return;
            }
            var newExpandedKeys = [];
            if (expanded) {
                newExpandedKeys = Array.from(new Set(__spreadArray(__spreadArray([], __read(expandedKeys), false), [key], false)));
            }
            else {
                newExpandedKeys = expandedKeys.filter(function (k) { return k !== key; });
            }
            if (!('expandedKeys' in _this.props)) {
                _this.setState({
                    expandedKeys: newExpandedKeys,
                    currentExpandKeys: __spreadArray(__spreadArray([], __read(currentExpandKeys), false), [key], false),
                });
            }
            onExpand &&
                onExpand(newExpandedKeys, {
                    expanded: expanded,
                    node: _this.cacheNodes[key],
                    expandedNodes: newExpandedKeys.map(function (x) { return _this.cacheNodes[x]; }).filter(function (x) { return x; }),
                });
        };
        // 传入构建好的expandedKeysSet
        _this.getNodeProps = function (nodeProps, expandedKeysSet) {
            var autoExpandParent = _this.getMergedProps().autoExpandParent;
            var loadMore = _this.props.loadMore;
            var _a = _this.state, selectedKeys = _a.selectedKeys, expandedKeys = _a.expandedKeys, checkedKeys = _a.checkedKeys, halfCheckedKeys = _a.halfCheckedKeys, _b = _a.loadingKeys, loadingKeys = _b === void 0 ? [] : _b, _c = _a.loadedKeys, loadedKeys = _c === void 0 ? [] : _c;
            var hasChildren = nodeProps.children && nodeProps.children.length;
            var otherProps = {
                isLeaf: !hasChildren,
                autoExpandParent: hasChildren ? autoExpandParent : false,
                expanded: expandedKeysSet
                    ? expandedKeysSet.has(nodeProps._key)
                    : expandedKeys.indexOf(nodeProps._key) > -1,
            };
            if (loadMore) {
                var loaded = loadedKeys.indexOf(nodeProps._key) > -1;
                otherProps.loaded = loaded;
                otherProps.isLeaf = hasChildren ? false : nodeProps.isLeaf;
            }
            return __assign(__assign(__assign({}, nodeProps), otherProps), { selected: selectedKeys && selectedKeys.indexOf(nodeProps._key) > -1, indeterminated: (halfCheckedKeys === null || halfCheckedKeys === void 0 ? void 0 : halfCheckedKeys.indexOf(nodeProps._key)) > -1, loading: loadingKeys.indexOf(nodeProps._key) > -1, checked: checkedKeys && checkedKeys.indexOf(nodeProps._key) > -1, selectedKeys: selectedKeys, checkedKeys: checkedKeys, loadingKeys: loadingKeys, loadedKeys: loadedKeys, expandedKeys: _this.state.expandedKeys, childrenData: nodeProps.children || [], children: null });
        };
        _this.handleExpandEnd = function (key) {
            var currentExpandKeys = _this.state.currentExpandKeys;
            if (currentExpandKeys.indexOf(key) > -1) {
                _this.setState({
                    currentExpandKeys: currentExpandKeys.filter(function (v) { return v !== key; }),
                });
            }
        };
        // 获取tree的state数据，在子组件里使用。
        _this.getTreeState = function () {
            return _this.state;
        };
        _this.state = {};
        var treeData = _this.getTreeData();
        var nodeList = _this.getNodeList(treeData, context.getPrefixCls('tree'));
        var _a = _this.getInitCheckedKeys(props.checkedKeys || props.defaultCheckedKeys || []), checkedKeys = _a.checkedKeys, halfCheckedKeys = _a.halfCheckedKeys;
        _this.state = {
            selectedKeys: props.selectedKeys || props.defaultSelectedKeys || [],
            checkedKeys: checkedKeys,
            halfCheckedKeys: halfCheckedKeys,
            expandedKeys: _this.getInitExpandedKeys(props.expandedKeys || props.defaultExpandedKeys),
            loadedKeys: [],
            loadingKeys: [],
            currentExpandKeys: [],
            nodeList: nodeList,
        };
        return _this;
    }
    Tree.getDerivedStateFromProps = function (nextProps, state) {
        var newState = {};
        if ('selectedKeys' in nextProps && !lodash_isEqualWith__WEBPACK_IMPORTED_MODULE_1___default()(nextProps.selectedKeys, state.selectedKeys)) {
            newState.selectedKeys = nextProps.selectedKeys || [];
        }
        if (Object.keys(newState).length) {
            return newState;
        }
        return null;
    };
    Tree.prototype.componentDidUpdate = function (prevProps) {
        // 类似 componentWillReceiveProps 周期
        var _this = this;
        var prevMergedProps = this.getMergedProps(prevProps);
        var mergedProps = this.getMergedProps();
        if (prevProps !== this.props || !lodash_isEqualWith__WEBPACK_IMPORTED_MODULE_1___default()(prevMergedProps, mergedProps)) {
            var newState_1 = {};
            if (this.needUpdateTreeData(__assign({ prevMergedProps: prevMergedProps }, prevProps), __assign(__assign({}, mergedProps), this.props))) {
                var treeData = this.getTreeData();
                var nodeList = this.getNodeList(treeData);
                newState_1.treeData = treeData;
                newState_1.nodeList = nodeList;
            }
            if (newState_1.treeData ||
                ('checkedKeys' in this.props && !lodash_isEqualWith__WEBPACK_IMPORTED_MODULE_1___default()(prevProps.checkedKeys, this.props.checkedKeys))) {
                // 说明treeData变了，需要比较下内部checkedKeys
                var currentCheckedKeys = 'checkedKeys' in this.props ? this.props.checkedKeys : this.state.checkedKeys;
                var _a = this.getInitCheckedKeys(currentCheckedKeys || []), halfCheckedKeys = _a.halfCheckedKeys, checkedKeys = _a.checkedKeys;
                if (!lodash_isEqualWith__WEBPACK_IMPORTED_MODULE_1___default()(checkedKeys, this.state.checkedKeys)) {
                    newState_1.checkedKeys = checkedKeys;
                }
                if (!lodash_isEqualWith__WEBPACK_IMPORTED_MODULE_1___default()(halfCheckedKeys, this.state.halfCheckedKeys)) {
                    newState_1.halfCheckedKeys = halfCheckedKeys;
                }
            }
            if (this.props.checkStrictly &&
                'halfCheckedKeys' in this.props &&
                !lodash_isEqualWith__WEBPACK_IMPORTED_MODULE_1___default()(prevProps.halfCheckedKeys, this.props.halfCheckedKeys)) {
                newState_1.halfCheckedKeys = this.props.halfCheckedKeys;
            }
            if ('expandedKeys' in this.props &&
                !lodash_isEqualWith__WEBPACK_IMPORTED_MODULE_1___default()(this.props.expandedKeys, prevProps.expandedKeys)) {
                newState_1.expandedKeys = this.props.expandedKeys;
                // 比较前后expandKeys的改变，去重，得到需要收起/展开的动画
                // 例如 [...[1, 2, 3], ...[1, 3, 4]] 。那么 2 会收起，4会展开。
                // 如果父节点正在执行收起/展开逻辑，子节点不需要出现在 currentExpandKeys 数组。
                newState_1.currentExpandKeys = __spreadArray(__spreadArray([], __read(newState_1.expandedKeys), false), __read(this.state.expandedKeys), false).reduce(function (total, next) {
                    var index = total.indexOf(next);
                    if (index === -1) {
                        total.push(next);
                    }
                    else {
                        total.splice(index, 1);
                    }
                    return total;
                }, [])
                    .filter(function (key, _, array) {
                    var _a;
                    if (_this.key2nodeProps[key]) {
                        var pathParentKeys = _this.key2nodeProps[key].pathParentKeys;
                        if (pathParentKeys.some(function (x) { return array.indexOf(x) > -1; })) {
                            return false;
                        }
                        return (_a = _this.key2nodeProps[key].children) === null || _a === void 0 ? void 0 : _a.length;
                    }
                });
            }
            var currentExpandKeys = newState_1.currentExpandKeys || this.state.currentExpandKeys;
            if (newState_1.treeData && currentExpandKeys) {
                newState_1.currentExpandKeys = currentExpandKeys.filter(function (key) {
                    var item = newState_1.treeData.find(function (node) { return node._key === key; });
                    return item && item.children && item.children.length;
                });
            }
            if (Object.keys(newState_1).length) {
                this.setState(newState_1);
            }
        }
    };
    Tree.prototype.render = function () {
        var _a;
        var _this = this;
        // render 之前重置掉，在NodeList里会进行赋值。
        this.cacheNodes = {};
        var _b = this.getMergedProps(), className = _b.className, showLine = _b.showLine, size = _b.size, _virtualListProps = _b.virtualListProps, height = _b.height, style = _b.style, icons = _b.icons;
        var _c = this.props, loadMore = _c.loadMore, checkable = _c.checkable;
        // 兼容旧 APi : height
        var virtualListProps = _virtualListProps
            ? __assign({ threshold: 100 }, _virtualListProps) : height
            ? { height: height, threshold: 100 }
            : {
                threshold: null,
            };
        var getPrefixCls = this.context.getPrefixCls;
        var prefixCls = getPrefixCls('tree');
        return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_context__WEBPACK_IMPORTED_MODULE_8__["TreeContext"].Provider, { value: {
                icons: icons,
                key2nodeProps: this.key2nodeProps,
                getFieldInfo: this.getFieldInfo,
                getTreeState: this.getTreeState,
                getNodeProps: this.getNodeProps,
                onExpandEnd: this.handleExpandEnd,
                onSelect: this.handleSelect,
                onCheck: this.handleCheck,
                onNodeDragStart: this.handleNodeDragStart,
                onNodeDragEnd: this.handleNodeDragEnd,
                onNodeDragLeave: this.handleNodeDragLeave,
                onNodeDragOver: this.handleNodeDragOver,
                onNodeDrop: this.handleNodeDrop,
                onExpand: this.handleExpand,
                renderExtra: this.props.renderExtra,
                renderTitle: this.props.renderTitle,
                loadMore: loadMore && this.handleLoadMore,
                allowDrop: this.handleAllowDrop,
                virtualListProps: virtualListProps,
            } },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_node_list__WEBPACK_IMPORTED_MODULE_4__["default"], { ref: function (node) {
                    _this.nodeListRef = node;
                }, className: Object(_util_classNames__WEBPACK_IMPORTED_MODULE_2__["default"])(prefixCls, (_a = {},
                    _a[prefixCls + "-checkable"] = checkable,
                    _a[prefixCls + "-show-line"] = showLine,
                    _a[prefixCls + "-size-" + size] = size,
                    _a), className), style: style, filterNode: this.props.filterNode, virtualListProps: virtualListProps, expandedKeys: this.state.expandedKeys, currentExpandKeys: this.state.currentExpandKeys, getNodeProps: this.getNodeProps, nodeList: this.state.nodeList, saveCacheNode: function (node) {
                    _this.cacheNodes[node.key] = node;
                } })));
    };
    Tree.displayName = 'Tree';
    Tree.SHOW_PARENT = 'parent';
    Tree.SHOW_ALL = 'all';
    Tree.SHOW_CHILD = 'child';
    Tree.Node = _node__WEBPACK_IMPORTED_MODULE_3__["default"];
    Tree.contextType = _ConfigProvider__WEBPACK_IMPORTED_MODULE_6__["ConfigContext"];
    return Tree;
}(react__WEBPACK_IMPORTED_MODULE_0__["Component"]));
/* harmony default export */ __webpack_exports__["default"] = (Tree);


/***/ }),

/***/ "./node_modules/@arco-design/web-react/es/Tree/node-list.js":
/*!******************************************************************!*\
  !*** ./node_modules/@arco-design/web-react/es/Tree/node-list.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _class_VirtualList__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_class/VirtualList */ "./node_modules/@arco-design/web-react/es/_class/VirtualList/index.js");
/* harmony import */ var _util_hooks_useUpdate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_util/hooks/useUpdate */ "./node_modules/@arco-design/web-react/es/_util/hooks/useUpdate.js");
/* harmony import */ var _node__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node */ "./node_modules/@arco-design/web-react/es/Tree/node.js");
/* harmony import */ var _util_scrollIntoView__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_util/scrollIntoView */ "./node_modules/@arco-design/web-react/es/_util/scrollIntoView.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};





function getKey(option) {
    return option.key || option._key;
}
function NodeList(props, ref) {
    var className = props.className, style = props.style, filterNode = props.filterNode, virtualListProps = props.virtualListProps, expandedKeys = props.expandedKeys, currentExpandKeys = props.currentExpandKeys, saveCacheNode = props.saveCacheNode, nodeList = props.nodeList, getNodeProps = props.getNodeProps;
    var isVirtual = (virtualListProps === null || virtualListProps === void 0 ? void 0 : virtualListProps.threshold) !== null;
    var virtualListRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])();
    var treeWrapperRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])();
    var expandedKeysSet = Object(react__WEBPACK_IMPORTED_MODULE_0__["useMemo"])(function () { return new Set(expandedKeys); }, [expandedKeys]);
    var visibleKeys = Object(react__WEBPACK_IMPORTED_MODULE_0__["useMemo"])(function () {
        var newKeys = new Set();
        var currentExpandKeysSet = new Set(currentExpandKeys);
        nodeList.forEach(function (nodeProps) {
            var pathParentKeys = nodeProps.pathParentKeys || [];
            // 如果父节点处于正在展开状态，子节点暂时不可见，因为父节点的children会在animaiton中渲染出来。
            // 当动画完成时，父节点children隐藏，此时在这里渲染子节点。 anyway，一切为了动画！！！
            if (pathParentKeys.every(function (key) { return !currentExpandKeysSet.has(key) && expandedKeysSet.has(key); })) {
                newKeys.add(nodeProps._key);
            }
        });
        return newKeys;
    }, [expandedKeysSet, currentExpandKeys, nodeList]);
    var calcChildrenList = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(function () {
        return nodeList.filter(function (item) {
            var pass = !filterNode || (filterNode && filterNode(item));
            if (pass && visibleKeys.has(item.key)) {
                return true;
            }
            // 过滤掉的也缓存一下，避免被收起的节点在onSelect回调中，selectedNodes出现undefined
            saveCacheNode(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_node__WEBPACK_IMPORTED_MODULE_3__["default"], __assign({}, item, getNodeProps(item), { key: item.key })));
            return false;
        });
    }, [nodeList, filterNode, visibleKeys]);
    // 默认值不能为nodeList，防止在设置defaultExpandedKeys时，应该被隐藏的节点初始化的时候展示了。
    var _a = __read(Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(function () {
        return calcChildrenList();
    }), 2), childrenList = _a[0], setChildrenList = _a[1];
    Object(_util_hooks_useUpdate__WEBPACK_IMPORTED_MODULE_2__["default"])(function () {
        setChildrenList(calcChildrenList());
    }, [calcChildrenList]);
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useImperativeHandle"])(ref, function () {
        return {
            // index: 第几个dom元素, 如果传入的是字符串，会作为 node 的 key去查找。
            // nodeProps: _index 是 key 时，对应的node
            scrollIntoView: function (_index, nodeProps) {
                var index = _index;
                var isKey = typeof _index === 'string';
                if (isKey) {
                    var key_1 = _index;
                    // 查找离得最近的可见的父节点，进行滚动。
                    if (!visibleKeys.has(_index) && nodeProps && nodeProps.pathParentKeys) {
                        key_1 =
                            __spreadArray([], __read(nodeProps.pathParentKeys), false).reverse().find(function (key) { return visibleKeys.has(key); }) || index;
                    }
                    // _index attributes and index are not the same due to some hidden items
                    index = childrenList.findIndex(function (_a) {
                        var _key = _a._key;
                        return _key === key_1;
                    });
                }
                if (!isVirtual && treeWrapperRef.current) {
                    var wrapperDom = treeWrapperRef.current;
                    var node = wrapperDom ? wrapperDom.children[index] : null;
                    node &&
                        Object(_util_scrollIntoView__WEBPACK_IMPORTED_MODULE_4__["default"])(node, {
                            boundary: wrapperDom.parentElement,
                        });
                }
                else if (virtualListRef.current) {
                    virtualListRef.current.scrollTo({ index: index });
                }
            },
        };
    });
    return isVirtual ? (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_class_VirtualList__WEBPACK_IMPORTED_MODULE_1__["default"], __assign({ className: className, style: style, ref: virtualListRef, data: childrenList, isStaticItemHeight: false, itemKey: getKey }, virtualListProps), function (item) {
        var node = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_node__WEBPACK_IMPORTED_MODULE_3__["default"], __assign({}, item, getNodeProps(item, expandedKeysSet), { key: item.key }));
        saveCacheNode(node);
        return node;
    })) : (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { className: className, style: style, ref: treeWrapperRef }, childrenList.map(function (item) {
        var node = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_node__WEBPACK_IMPORTED_MODULE_3__["default"], __assign({}, item, getNodeProps(item, expandedKeysSet), { key: item.key }));
        saveCacheNode(node);
        return node;
    })));
}
/* harmony default export */ __webpack_exports__["default"] = (Object(react__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(NodeList));


/***/ }),

/***/ "./node_modules/@arco-design/web-react/es/Tree/node.js":
/*!*************************************************************!*\
  !*** ./node_modules/@arco-design/web-react/es/Tree/node.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Checkbox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Checkbox */ "./node_modules/@arco-design/web-react/es/Checkbox/index.js");
/* harmony import */ var _util_classNames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_util/classNames */ "./node_modules/@arco-design/web-react/es/_util/classNames.js");
/* harmony import */ var _util_is__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_util/is */ "./node_modules/@arco-design/web-react/es/_util/is.js");
/* harmony import */ var _icon_react_icon_IconCaretDown__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../icon/react-icon/IconCaretDown */ "./node_modules/@arco-design/web-react/icon/react-icon/IconCaretDown/index.js");
/* harmony import */ var _icon_react_icon_IconDragDotVertical__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../icon/react-icon/IconDragDotVertical */ "./node_modules/@arco-design/web-react/icon/react-icon/IconDragDotVertical/index.js");
/* harmony import */ var _icon_react_icon_IconLoading__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../icon/react-icon/IconLoading */ "./node_modules/@arco-design/web-react/icon/react-icon/IconLoading/index.js");
/* harmony import */ var _icon_react_icon_IconFile__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../icon/react-icon/IconFile */ "./node_modules/@arco-design/web-react/icon/react-icon/IconFile/index.js");
/* harmony import */ var _ConfigProvider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ConfigProvider */ "./node_modules/@arco-design/web-react/es/ConfigProvider/index.js");
/* harmony import */ var _class_icon_hover__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../_class/icon-hover */ "./node_modules/@arco-design/web-react/es/_class/icon-hover.js");
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./context */ "./node_modules/@arco-design/web-react/es/Tree/context.js");
/* harmony import */ var _animation__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./animation */ "./node_modules/@arco-design/web-react/es/Tree/animation.js");
/* harmony import */ var _util_throttleByRaf__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../_util/throttleByRaf */ "./node_modules/@arco-design/web-react/es/_util/throttleByRaf.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};













function TreeNode(props, ref) {
    var _a, _b, _c;
    var _this = this;
    var treeContext = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context__WEBPACK_IMPORTED_MODULE_10__["TreeContext"]);
    var getPrefixCls = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_ConfigProvider__WEBPACK_IMPORTED_MODULE_8__["ConfigContext"]).getPrefixCls;
    // const prevProps: NodeProps = usePrevious(props) || {};
    var nodeTitleRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])();
    var _d = __read(Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])({
        isAllowDrop: true,
        isDragOver: false,
        dragPosition: 0,
        isDragging: false,
    }), 2), state = _d[0], setState = _d[1];
    var _e = props._key, _key = _e === void 0 ? '' : _e, title = props.title, icon = props.icon, checkable = props.checkable, selected = props.selected, disabled = props.disabled, disableCheckbox = props.disableCheckbox, isLeaf = props.isLeaf, draggable = props.draggable, expanded = props.expanded, showLine = props.showLine, loading = props.loading, _f = props.selectable, selectable = _f === void 0 ? true : _f;
    var prefixCls = getPrefixCls('tree-node');
    var classNames = Object(_util_classNames__WEBPACK_IMPORTED_MODULE_2__["default"])(prefixCls, (_a = {},
        _a[prefixCls + "-selected"] = selected,
        _a[prefixCls + "-is-leaf"] = isLeaf,
        _a[prefixCls + "-expanded"] = expanded,
        _a[prefixCls + "-disabled-selectable"] = !selectable,
        _a[prefixCls + "-disabled"] = disabled,
        _a[prefixCls + "-draggable"] = draggable,
        _a), props.className);
    var icons = (function () {
        var treeIcons = Object(_util_is__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(treeContext.icons) ? treeContext.icons(props) : treeContext.icons;
        var propsIcons = Object(_util_is__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(props.icons) ? props.icons(props) : props.icons;
        return __assign(__assign({}, treeIcons), propsIcons);
    })();
    var setExpand = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(function (newExpand) {
        if (newExpand === expanded) {
            return;
        }
        treeContext.onExpand && treeContext.onExpand(newExpand, _key);
    }, [expanded, treeContext.onExpand]);
    var switchExpandStatus = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(function () { return __awaiter(_this, void 0, void 0, function () {
        var isLeaf, expanded;
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    isLeaf = props.isLeaf, expanded = props.expanded;
                    if (isLeaf) {
                        return [2 /*return*/];
                    }
                    if (!(!((_a = props.childrenData) === null || _a === void 0 ? void 0 : _a.length) && Object(_util_is__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(treeContext.loadMore) && !expanded)) return [3 /*break*/, 2];
                    return [4 /*yield*/, treeContext.loadMore(props)];
                case 1:
                    _b.sent();
                    return [3 /*break*/, 3];
                case 2:
                    setExpand(!expanded);
                    _b.label = 3;
                case 3: return [2 /*return*/];
            }
        });
    }); }, [props, setExpand, treeContext.loadMore]);
    var getPrefixIcon = function () {
        if (loading) {
            return 'loadingIcon' in icons ? icons.loadingIcon : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_icon_react_icon_IconLoading__WEBPACK_IMPORTED_MODULE_6__["default"], null);
        }
        var icon = null;
        var needIconHover = false;
        if (!isLeaf) {
            var defaultIcon = showLine ? (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", { className: prefixCls + "-" + (expanded ? 'minus' : 'plus') + "-icon" })) : (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_icon_react_icon_IconCaretDown__WEBPACK_IMPORTED_MODULE_4__["default"], null));
            icon = 'switcherIcon' in icons ? icons.switcherIcon : defaultIcon;
            needIconHover = !showLine;
        }
        else if (showLine) {
            icon = 'switcherIcon' in icons ? icons.switcherIcon : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_icon_react_icon_IconFile__WEBPACK_IMPORTED_MODULE_7__["default"], null);
            needIconHover = true;
        }
        if (icon) {
            icon = (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", { className: prefixCls + "-switcher-icon", onClick: switchExpandStatus }, icon));
            return needIconHover ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_class_icon_hover__WEBPACK_IMPORTED_MODULE_9__["default"], { prefix: prefixCls }, icon) : icon;
        }
    };
    var updateDragOverState = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(Object(_util_throttleByRaf__WEBPACK_IMPORTED_MODULE_12__["default"])(function (e) {
        var dom = nodeTitleRef.current;
        if (!dom)
            return;
        var rect = dom.getBoundingClientRect();
        var offsetY = window.pageYOffset + rect.top;
        var pageY = e.pageY;
        var gapHeight = rect.height / 4;
        var diff = pageY - offsetY;
        var position = diff < gapHeight ? -1 : diff < rect.height - gapHeight ? 0 : 1;
        var isAllowDrop = treeContext.allowDrop(props, position);
        setState(__assign(__assign({}, state), { isAllowDrop: isAllowDrop, isDragOver: true, dragPosition: position }));
        treeContext.onNodeDragOver && treeContext.onNodeDragOver(e, props, position);
    }), [treeContext.onNodeDragOver]);
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null,
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", { style: props.style, className: classNames, ref: ref },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", { className: prefixCls + "-indent" }, __spreadArray([], __read(Array(props._level)), false).map(function (_, i) {
                var _a;
                return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", { className: Object(_util_classNames__WEBPACK_IMPORTED_MODULE_2__["default"])(prefixCls + "-indent-block", (_a = {},
                        _a[prefixCls + "-indent-block-lineless"] = props._lineless && props._lineless[i],
                        _a)), key: i }));
            })),
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", { className: Object(_util_classNames__WEBPACK_IMPORTED_MODULE_2__["default"])(prefixCls + "-switcher", (_b = {},
                    _b[prefixCls + "-switcher-expanded"] = expanded,
                    _b)) }, getPrefixIcon()),
            checkable ? (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_Checkbox__WEBPACK_IMPORTED_MODULE_1__["default"], { disabled: disableCheckbox || disabled, value: _key, indeterminate: props.indeterminated, checked: props.checked, onChange: function (checked, e) {
                    var disableCheckbox = props.disableCheckbox, disabled = props.disabled;
                    if (disableCheckbox || disabled) {
                        return;
                    }
                    treeContext.onCheck && treeContext.onCheck(checked, _key, e);
                } })) : null,
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", { ref: nodeTitleRef, className: Object(_util_classNames__WEBPACK_IMPORTED_MODULE_2__["default"])(prefixCls + "-title", (_c = {},
                    _c[prefixCls + "-title-draggable"] = draggable,
                    _c[prefixCls + "-title-gap-top"] = state.isDragOver && state.isAllowDrop && state.dragPosition < 0,
                    _c[prefixCls + "-title-gap-bottom"] = state.isDragOver && state.isAllowDrop && state.dragPosition > 0,
                    _c[prefixCls + "-title-highlight"] = !state.isDragging &&
                        state.isDragOver &&
                        state.isAllowDrop &&
                        state.dragPosition === 0,
                    _c[prefixCls + "-title-dragging"] = state.isDragging,
                    _c[prefixCls + "-title-block"] = props.blockNode,
                    _c)), onClick: function (e) {
                    var onSelect = treeContext.onSelect;
                    !props.disabled && selectable && onSelect && onSelect(_key, e);
                }, draggable: draggable, onDrop: function (e) {
                    e.stopPropagation();
                    e.preventDefault();
                    treeContext.onNodeDrop && treeContext.onNodeDrop(e, props, state.dragPosition);
                    updateDragOverState.cancel();
                    setState(__assign(__assign({}, state), { isDragOver: false, dragPosition: 0 }));
                }, onDragStart: function (e) {
                    if (!draggable)
                        return;
                    e.stopPropagation();
                    // 当前节点正在被拖拽
                    setState(__assign(__assign({}, state), { isDragging: true }));
                    treeContext.onNodeDragStart && treeContext.onNodeDragStart(e, props);
                    try {
                        // ie throw error
                        // firefox-need-it
                        e.dataTransfer.setData('text/plain', '');
                    }
                    catch (error) {
                        // empty
                    }
                }, onDragEnd: function (e) {
                    if (!draggable)
                        return;
                    e.stopPropagation();
                    updateDragOverState.cancel();
                    setState(__assign(__assign({}, state), { isDragOver: false, isDragging: false }));
                    treeContext.onNodeDragEnd && treeContext.onNodeDragEnd(e, props);
                }, onDragOver: function (e) {
                    e.preventDefault();
                    e.stopPropagation();
                    e.persist();
                    updateDragOverState(e);
                }, onDragLeave: function (e) {
                    if (!draggable)
                        return;
                    e.stopPropagation();
                    updateDragOverState.cancel();
                    setState(__assign(__assign({}, state), { isDragOver: false }));
                    treeContext.onNodeDragLeave && treeContext.onNodeDragLeave(e, props);
                } },
                icon && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", { className: prefixCls + "-icon " + prefixCls + "-custom-icon" }, icon),
                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", { className: prefixCls + "-title-text" }, Object(_util_is__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(treeContext.renderTitle) ? treeContext.renderTitle(props) : title),
                draggable && (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", { className: prefixCls + "-icon " + prefixCls + "-drag-icon" }, 'dragIcon' in icons ? icons.dragIcon : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_icon_react_icon_IconDragDotVertical__WEBPACK_IMPORTED_MODULE_5__["default"], null)))),
            Object(_util_is__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(treeContext.renderExtra) && treeContext.renderExtra(props)),
        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_animation__WEBPACK_IMPORTED_MODULE_11__["default"], __assign({}, props))));
}
var TreeNodeComponent = Object(react__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(TreeNode);
TreeNodeComponent.displayName = 'TreeNode';
/* harmony default export */ __webpack_exports__["default"] = (react__WEBPACK_IMPORTED_MODULE_0___default.a.memo(TreeNodeComponent));


/***/ }),

/***/ "./node_modules/@arco-design/web-react/es/Tree/style/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@arco-design/web-react/es/Tree/style/index.js ***!
  \********************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _style_index_less__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../style/index.less */ "./node_modules/@arco-design/web-react/es/style/index.less");
/* harmony import */ var _style_index_less__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_index_less__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Checkbox_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Checkbox/style */ "./node_modules/@arco-design/web-react/es/Checkbox/style/index.js");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.less */ "./node_modules/@arco-design/web-react/es/Tree/style/index.less");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_2__);





/***/ }),

/***/ "./node_modules/@arco-design/web-react/es/Tree/style/index.less":
/*!**********************************************************************!*\
  !*** ./node_modules/@arco-design/web-react/es/Tree/style/index.less ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../../../../../css-loader/dist/cjs.js??ref--9-1!../../../../../postcss-loader/dist/cjs.js??ref--9-2!../../../../../less-loader/dist/cjs.js??ref--9-3!./index.less */ "./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/dist/cjs.js?!./node_modules/less-loader/dist/cjs.js?!./node_modules/@arco-design/web-react/es/Tree/style/index.less");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

var update = api(content, options);



module.exports = content.locals || {};

/***/ }),

/***/ "./node_modules/@arco-design/web-react/es/Tree/util.js":
/*!*************************************************************!*\
  !*** ./node_modules/@arco-design/web-react/es/Tree/util.js ***!
  \*************************************************************/
/*! exports provided: getTreeDataFromTreeChildren, getChildNodeKeys, getCheckedKeysByInitKeys, getAllCheckedKeysByCheck */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTreeDataFromTreeChildren", function() { return getTreeDataFromTreeChildren; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getChildNodeKeys", function() { return getChildNodeKeys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCheckedKeysByInitKeys", function() { return getCheckedKeysByInitKeys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAllCheckedKeysByCheck", function() { return getAllCheckedKeysByCheck; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};

var getTreeDataFromTreeChildren = function (treeChildren) {
    var loop = function (children) {
        return react__WEBPACK_IMPORTED_MODULE_0___default.a.Children.map(children, function (child) {
            if (!react__WEBPACK_IMPORTED_MODULE_0___default.a.isValidElement(child)) {
                return;
            }
            var key = child.key;
            return __assign(__assign({}, child.props), { key: key, children: loop(child.props.children) });
        });
    };
    return loop(treeChildren);
};
function getChildNodeKeys(node, key2nodeProps) {
    var nodes = new Set();
    var loop = function (children) {
        children.map(function (child) {
            var key = child.key;
            var item = key2nodeProps[key];
            if (!item || item.disabled || item.disableCheckbox || item.checkable === false) {
                return;
            }
            nodes.add(key);
            loop(item.children || []);
        });
    };
    if (node) {
        loop(node.children || []);
    }
    return nodes;
}
var updateParent = function (key, key2nodeProps, allKeys, indeterminateKeysSet) {
    var pathParentKeys = __spreadArray([], __read(key2nodeProps[key].pathParentKeys), false);
    // 逐级更新父节点的状态
    pathParentKeys.reverse().forEach(function (itemKey) {
        var parent = key2nodeProps[itemKey];
        if (parent && !parent.disabled && !parent.disableCheckbox && parent.checkable !== false) {
            var total_1 = 0;
            var number_1 = 0;
            parent.children.some(function (_a) {
                var key = _a.key;
                var item = key2nodeProps[key];
                // 不符合可选条件
                if (!item || item.disabled || item.disableCheckbox || item.checkable === false) {
                    return false;
                }
                total_1++;
                if (allKeys.has(key)) {
                    number_1++;
                }
                else if (indeterminateKeysSet.has(key)) {
                    // 只要有一个半选，就不用再算了 ，父节点是半选
                    number_1 += 0.5;
                    return true;
                }
            });
            if (!number_1 || number_1 === total_1) {
                indeterminateKeysSet.delete(itemKey);
            }
            else {
                indeterminateKeysSet.add(itemKey);
            }
            if (number_1 && number_1 === total_1) {
                allKeys.add(itemKey);
            }
            else {
                allKeys.delete(itemKey);
            }
        }
    });
};
// also used by tree-select
function getCheckedKeysByInitKeys(checkedKeys, key2nodeProps) {
    var checkedKeysSet = new Set(checkedKeys || []);
    var indeterminateKeysSet = new Set();
    var childCheckedKeysSet = new Set();
    checkedKeys.forEach(function (key) {
        if (!childCheckedKeysSet.has(key)) {
            var childKeys = getChildNodeKeys(key2nodeProps[key], key2nodeProps);
            // 选中了节点，就找到所有符合条件的子节点的key.自身的选中状态需要根据children判断。
            childKeys.forEach(function (v) {
                childCheckedKeysSet.add(v);
            });
        }
        if (key2nodeProps[key] &&
            !key2nodeProps[key].pathParentKeys.some(function (_key) { return checkedKeysSet.has(_key); })) {
            updateParent(key, key2nodeProps, checkedKeysSet, indeterminateKeysSet);
        }
    });
    return {
        checkedKeys: __spreadArray([], __read(new Set(__spreadArray(__spreadArray([], __read(checkedKeysSet), false), __read(childCheckedKeysSet), false))), false),
        indeterminateKeys: __spreadArray([], __read(indeterminateKeysSet), false),
    };
}
// also used by tree-select
function getAllCheckedKeysByCheck(key, checked, checkedKeys, key2nodeProps, indeterminateKeys) {
    if (!key2nodeProps[key]) {
        return {
            checkedKeys: checkedKeys,
            indeterminateKeys: indeterminateKeys,
        };
    }
    var checkedKeysSet = new Set(checkedKeys);
    var indeterminateKeysSet = new Set(indeterminateKeys);
    var childKeys = getChildNodeKeys(key2nodeProps[key], key2nodeProps);
    var allKeys = checkedKeysSet;
    if (checked) {
        // 选中了节点，就找到所有符合条件的子节点的key.自身的选中状态需要根据children判断。
        allKeys.add(key);
        indeterminateKeysSet.delete(key);
        childKeys.forEach(function (v) {
            allKeys.add(v);
        });
    }
    else {
        indeterminateKeysSet.delete(key);
        // 移除所有符合条件的子节点的key
        allKeys.delete(key);
        childKeys.forEach(function (v) {
            allKeys.delete(v);
        });
    }
    // 之后逐级更新父节点的选中状态。
    updateParent(key, key2nodeProps, checkedKeysSet, indeterminateKeysSet);
    return {
        checkedKeys: __spreadArray([], __read(allKeys), false),
        indeterminateKeys: __spreadArray([], __read(indeterminateKeysSet), false),
    };
}


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/dist/cjs.js?!./node_modules/less-loader/dist/cjs.js?!./node_modules/@arco-design/web-react/es/Tree/style/index.less":
/*!***************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ref--9-1!./node_modules/postcss-loader/dist/cjs.js??ref--9-2!./node_modules/less-loader/dist/cjs.js??ref--9-3!./node_modules/@arco-design/web-react/es/Tree/style/index.less ***!
  \***************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, "/******** borderSize *******/\n/******** borderStyle *******/\n/******** radius *******/\n/******** shadow distance *******/\n/******** size *******/\n/******** spacing *******/\n/******** shadow *******/\n/******** opacity *******/\n/******** fontSize *******/\n/******** fontWeight ********/\n/******** Primary *******/\n/******** success *******/\n/******** warning *******/\n/******** danger *******/\n/******** link *******/\n/******** radius *******/\n/********* icon hover *********/\n/******* icon ******/\n.arco-icon-hover.arco-tree-node-icon-hover::before {\n  width: 16px;\n  height: 16px;\n}\n.arco-tree-node-switcher {\n  font-size: 12px;\n  color: var(--color-text-2);\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  display: flex;\n  align-items: center;\n  position: relative;\n  margin-right: 10px;\n  height: 32px;\n  width: 12px;\n  flex-shrink: 0;\n}\n.arco-tree-node-switcher-icon {\n  position: relative;\n  margin: 0 auto;\n}\n.arco-tree-node-switcher-icon svg {\n  -webkit-transform: rotate(-90deg);\n          transform: rotate(-90deg);\n  position: relative;\n  transition: -webkit-transform 0.2s cubic-bezier(0.34, 0.69, 0.1, 1);\n  transition: transform 0.2s cubic-bezier(0.34, 0.69, 0.1, 1);\n  transition: transform 0.2s cubic-bezier(0.34, 0.69, 0.1, 1), -webkit-transform 0.2s cubic-bezier(0.34, 0.69, 0.1, 1);\n}\n.arco-tree-node-expanded .arco-tree-node-switcher-icon svg,\n.arco-tree-node-is-leaf .arco-tree-node-switcher-icon svg {\n  -webkit-transform: rotate(0);\n          transform: rotate(0);\n}\n.arco-tree-node-drag-icon {\n  color: rgb(var(--primary-6));\n  opacity: 0;\n  margin-left: 120px;\n}\n.arco-tree-node-custom-icon {\n  font-size: inherit;\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  margin-right: 10px;\n}\n.arco-tree-node .arco-icon-loading {\n  color: rgb(var(--primary-6));\n}\n.arco-tree-node-minus-icon,\n.arco-tree-node-plus-icon {\n  cursor: pointer;\n  background: var(--color-fill-2);\n  border-radius: var(--border-radius-small);\n  position: relative;\n  display: block;\n  width: 14px;\n  height: 14px;\n}\n.arco-tree-node-minus-icon::after,\n.arco-tree-node-plus-icon::after {\n  content: '';\n  position: absolute;\n  display: block;\n  color: var(--color-text-2);\n  width: 6px;\n  height: 2px;\n  background-color: var(--color-text-2);\n  border-radius: 0.5px;\n  top: 50%;\n  left: 50%;\n  margin-top: -1px;\n  margin-left: -3px;\n}\n.arco-tree-node-plus-icon::before {\n  content: '';\n  border-radius: 0.5px;\n  position: absolute;\n  display: block;\n  color: var(--color-text-2);\n  height: 6px;\n  width: 2px;\n  background-color: var(--color-text-2);\n  left: 50%;\n  margin-left: -1px;\n  top: 50%;\n  margin-top: -3px;\n}\n/******* tree ***********/\n.arco-tree {\n  color: var(--color-text-1);\n}\n.arco-tree .arco-checkbox {\n  margin-right: 10px;\n  padding-left: 0;\n  line-height: 32px;\n}\n.arco-tree-node {\n  padding-left: 2px;\n  color: var(--color-text-1);\n  position: relative;\n  cursor: pointer;\n  display: flex;\n  align-items: flex-start;\n  flex-wrap: nowrap;\n  line-height: 1.5715;\n}\n.arco-tree-node-selected .arco-tree-node-title,\n.arco-tree-node-selected .arco-tree-node-title:hover {\n  color: rgb(var(--primary-6));\n  transition: color 0.2s cubic-bezier(0, 0, 1, 1);\n}\n.arco-tree-node-disabled-selectable .arco-tree-node-title,\n.arco-tree-node-disabled .arco-tree-node-title,\n.arco-tree-node-disabled-selectable .arco-tree-node-title:hover,\n.arco-tree-node-disabled .arco-tree-node-title:hover {\n  background: none;\n  color: var(--color-text-4);\n  cursor: not-allowed;\n}\n.arco-tree-node-disabled.arco-tree-node-selected .arco-tree-node-title {\n  color: var(--color-primary-light-3);\n}\n.arco-tree-node-title-block {\n  flex: 1;\n  box-sizing: content-box;\n}\n.arco-tree-node-title-block .arco-tree-node-drag-icon {\n  position: absolute;\n  right: 12px;\n}\n.arco-tree-node-indent {\n  align-self: stretch;\n  flex-shrink: 0;\n  position: relative;\n}\n.arco-tree-node-indent-block {\n  display: inline-block;\n  width: 12px;\n  margin-right: 10px;\n  height: 100%;\n  position: relative;\n}\n.arco-tree-node-title {\n  font-size: 14px;\n  padding: 5px 0;\n  padding-left: 4px;\n  padding-right: 4px;\n  margin-left: -4px;\n  border-radius: var(--border-radius-small);\n  position: relative;\n}\n.arco-tree-node-title:hover {\n  background-color: var(--color-fill-2);\n  color: var(--color-text-1);\n}\n.arco-tree-node-title:hover .arco-tree-node-drag-icon {\n  opacity: 1;\n}\n.arco-tree-node-title-draggable::before {\n  content: '';\n  display: block;\n  height: 2px;\n  border-radius: 1px;\n  left: 0;\n  right: 0;\n  position: absolute;\n  top: 0;\n}\n.arco-tree-node-title-gap-bottom::before {\n  top: unset;\n  bottom: 0;\n  background-color: rgb(var(--primary-6));\n}\n.arco-tree-node-title-gap-top::before {\n  background-color: rgb(var(--primary-6));\n}\n.arco-tree-node-title-highlight {\n  background-color: var(--color-primary-light-1);\n  color: var(--color-text-1);\n}\n.arco-tree-node-title-dragging,\n.arco-tree-node-title-dragging:hover {\n  background-color: var(--color-fill-1);\n  color: var(--color-text-4);\n}\n.arco-tree-show-line {\n  padding-left: 1px;\n}\n.arco-tree-show-line .arco-tree-node-switcher {\n  width: 14px;\n  text-align: center;\n}\n.arco-tree-show-line .arco-tree-node-switcher .arco-tree-node-icon-hover {\n  width: 100%;\n}\n.arco-tree-show-line .arco-tree-node-indent-block {\n  width: 14px;\n}\n.arco-tree-show-line .arco-tree-node-indent-block::before {\n  position: absolute;\n  left: 50%;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n  width: 1px;\n  border-left: 1px solid var(--color-neutral-3);\n  content: '';\n  box-sizing: border-box;\n  top: -5px;\n  bottom: -5px;\n}\n.arco-tree-show-line .arco-tree-node-is-leaf:not(.arco-tree-node-is-tail) .arco-tree-node-indent::after {\n  content: '';\n  position: absolute;\n  box-sizing: border-box;\n  border-left: 1px solid var(--color-neutral-3);\n  width: 1px;\n  right: -7px;\n  -webkit-transform: translateX(50%);\n          transform: translateX(50%);\n  top: 27px;\n  bottom: -5px;\n}\n.arco-tree-show-line .arco-tree-node-indent-block-lineless::before {\n  display: none;\n}\n/******** size *******/\n.arco-tree-size-mini .arco-tree-node-switcher {\n  height: 24px;\n}\n.arco-tree-size-mini .arco-checkbox {\n  line-height: 24px;\n}\n.arco-tree-size-mini .arco-tree-node-title {\n  font-size: 12px;\n  line-height: 1.667;\n  padding-top: 2px;\n  padding-bottom: 2px;\n}\n.arco-tree-size-mini .arco-tree-node-indent-block::before {\n  top: 23px;\n  bottom: -1px;\n}\n.arco-tree-size-mini .arco-tree-node-is-leaf:not(.arco-tree-node-is-tail) .arco-tree-node-indent::after {\n  top: -1px;\n  bottom: -1px;\n}\n.arco-tree-size-small .arco-tree-node-switcher {\n  height: 28px;\n}\n.arco-tree-size-small .arco-checkbox {\n  line-height: 28px;\n}\n.arco-tree-size-small .arco-tree-node-title {\n  font-size: 14px;\n  padding-top: 3px;\n  padding-bottom: 3px;\n}\n.arco-tree-size-small .arco-tree-node-indent-block::before {\n  top: 25px;\n  bottom: -3px;\n}\n.arco-tree-size-small .arco-tree-node-is-leaf:not(.arco-tree-node-is-tail) .arco-tree-node-indent::after {\n  top: -3px;\n  bottom: -3px;\n}\n.arco-tree-size-large .arco-tree-node-switcher {\n  height: 36px;\n}\n.arco-tree-size-large .arco-checkbox {\n  line-height: 36px;\n}\n.arco-tree-size-large .arco-tree-node-title {\n  font-size: 14px;\n  padding-top: 7px;\n  padding-bottom: 7px;\n}\n.arco-tree-size-large .arco-tree-node-indent-block::before {\n  top: 29px;\n  bottom: -7px;\n}\n.arco-tree-size-large .arco-tree-node-is-leaf:not(.arco-tree-node-is-tail) .arco-tree-node-indent::after {\n  top: -7px;\n  bottom: -7px;\n}\n.arco-tree-node-list {\n  overflow: hidden;\n  transition: height 0.2s cubic-bezier(0.34, 0.69, 0.1, 1);\n}\n", ""]);
// Exports
module.exports = exports;


/***/ })

}]);
//# sourceMappingURL=26.min.js.map